{"ast":null,"code":"import _asyncToGenerator from\"/Users/trinhnguyen/Desktop/Web Dev/myBlogs/NodeJs/NASA-Project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/trinhnguyen/Desktop/Web Dev/myBlogs/NodeJs/NASA-Project/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// TODO: Once API is ready.\n// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:'post',headers:'application/json',body:JSON.stringify(launch)// (convert Object into valid JSON String)\n});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/trinhnguyen/Desktop/Web Dev/myBlogs/NodeJs/NASA-Project/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id"],"mappings":"yTAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,C,QAEeC,CAAAA,c,iDAKf;AACA;mGANA,sKACyBC,CAAAA,KAAK,WAAIF,OAAJ,aAD9B,QACQG,QADR,qCAEeA,CAAAA,QAAQ,CAACC,IAAT,EAFf,6G,yDAOeC,CAAAA,e,uJAAf,0LACyBH,CAAAA,KAAK,WAAIF,OAAJ,cAD9B,QACQG,QADR,uCAE8BA,CAAAA,QAAQ,CAACC,IAAT,EAF9B,QAEQE,aAFR,iDAGSA,aAAa,CAACC,IAAd,CAAmB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CAHT,0D,0DAQeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAIiBV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACxCa,MAAM,CAAE,MADgC,CAExCC,OAAO,CAAE,kBAF+B,CAGxCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAuB;AAHW,CAAxB,CAJtB,qJAUW,CACLM,EAAE,CAAG,KADA,CAVX,uE,2DAiBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OACEnB,cADF,CAEEI,eAFF,CAGEM,gBAHF,CAIEQ,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`) \n  return await response.json()\n}\n\n// TODO: Once API is ready.\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`)  \n  const fetchLaunches = await response.json()\n  return fetchLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber\n  })\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: 'post',\n      headers: 'application/json',\n      body: JSON.stringify(launch) // (convert Object into valid JSON String)\n    })\n  } catch (error) {\n    return {\n      ok : false\n    }\n  }\n  \n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}